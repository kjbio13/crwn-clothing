{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //styles\n\nimport './sign-in.styles.scss'; //components\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; //utilities\n\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState = {\n          email: \"\",\n          password: \"\"\n        };\n        console.log(\"Success!\");\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      isGoogleSignIn: true,\n      onClick: signInWithGoogle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, ' ', \"Sign In with Google\", ' '))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","SignIn","constructor","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","console","log","error","message","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\n//styles\nimport './sign-in.styles.scss'\n\n//components\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\n//utilities\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\n\n\nimport { googleSignInStart } from '../../redux/user/user.actions'\n\nclass SignIn extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const { email, password } = this.state;\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            this.setState = {\n                email: \"\",\n                password: \"\"\n            }\n            console.log(\"Success!\");\n\n        } catch (error) {\n            console.log(error.message)\n        }\n\n\n    }\n\n    handleChange = (event) => {\n\n        const { value, name } = event.target;\n\n        this.setState({\n            [name]: value\n        })\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"sign-in\">\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n\n\n                    <FormInput\n                        name=\"email\"\n                        type=\"email\"\n                        value={this.state.email}\n                        handleChange={this.handleChange}\n                        label=\"email\"\n                        required />\n\n                    <FormInput\n                        name=\"password\"\n                        type=\"password\"\n                        value={this.state.password}\n                        handleChange={this.handleChange}\n                        label=\"password\"\n                        required\n                    />\n                    <div className=\"buttons\">\n                        <CustomButton type=\"submit\">\n                            Sign In\n                        </CustomButton>\n\n                        <CustomButton type=\"button\" isGoogleSignIn onClick={signInWithGoogle}>\n                            {' '}\n                            Sign In with Google\n                            {' '}\n                        </CustomButton>\n                    </div>\n\n\n                </form>\n\n\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}