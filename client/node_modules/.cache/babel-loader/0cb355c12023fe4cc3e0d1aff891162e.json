{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils'; // import { updateCollections } from '../../redux/shop/shop.actions';\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collection');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      dispatch(fetchCollectionsSuccess(collectionsMap)); // this.setState({ loading: false })\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/redux/shop/shop.actions.jsx"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","console","log","catch","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D,C,CAEA;;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACZE,GADD,GAECC,IAFD,CAEMC,QAAQ,IAAI;AACd,YAAMZ,cAAc,GAAGL,8BAA8B,CAACiB,QAAD,CAArD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,cAAZ;AACAO,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR,CAHc,CAId;AACH,KAPD,EAOGe,KAPH,CAOSC,KAAK,IAAIT,QAAQ,CAACJ,uBAAuB,CAACa,KAAD,CAAxB,CAP1B;AAQH,GAZD;AAaH,CAdM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\n\n// import { updateCollections } from '../../redux/shop/shop.actions';\n\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n \nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collection');\n        dispatch(fetchCollectionsStart());\n\n        collectionRef\n        .get()\n        .then(snapshot => {\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n            console.log(collectionsMap);\n            dispatch(fetchCollectionsSuccess(collectionsMap))\n            // this.setState({ loading: false })\n        }).catch(error => dispatch(fetchCollectionsFailure(error)))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}