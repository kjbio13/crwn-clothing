{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/pages/shop/shop.components.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; // import { createStructuredSelector } from 'reselect'\n//components\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n// import WithSpinner from '../../components/with-spinner/with-spinner.component';\n//pages\n// import CollectionPage from '../collection/collection.component';\n//firestore\n// import { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\n//actions\n// import { updateCollections } from '../../redux/shop/shop.actions';\n//thunk actions\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'; // import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n//container\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionsPageContainer from '../../pages/collection/collection.container'; // const ShopPage = ({ match }) => (\n//     <div className=\"shop-page\">\n//         <Route exact path={`${match.path}`} component={CollectionsOverview} />\n//         <Route path={`${match.path}/:collectionId`}  component={CollectionPage} />\n//     </div>\n// )\n//spinner - high order component\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  // state = {\n  //     loading: true\n  // }\n  // unsubscribeFromSnapshot = null;\n  componentDidMount() {\n    // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection('collection');\n    //using snapshot\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n    //     console.log(collectionsMap);\n    //     updateCollections(collectionsMap)\n    //     this.setState({ loading: false })\n    // });\n    // using .get promise --- moved to reducer via redux-thunk\n    // collectionRef.get().then(snapshot => {\n    //     const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n    //     console.log(collectionsMap);\n    //     updateCollections(collectionsMap)\n    //     this.setState({ loading: false })\n    // })\n    // //too nested\n    //         fetch('https://firestore.googleapis.com/v1/projects/crwn-db-c482a/databases/(default)/documents/collection')\n    //         .then(response => response.json())\n    //         .then(response => console.log(response))\n    //         }\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionsPageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} // const mapStateToProps = createStructuredSelector({\n//     isCollectionFetching: selectIsCollectionFetching,\n//     isCollectionsLoaded: selectIsCollectionsLoaded\n// })\n\n\nconst mapDispatchToProps = dispatch => ({\n  // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/pages/shop/shop.components.jsx"],"names":["React","Component","Route","connect","fetchCollectionsStartAsync","CollectionsOverviewContainer","CollectionsPageContainer","ShopPage","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AACA,SAASC,0BAAT,QAA2C,+BAA3C,C,CACA;AAEA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,wBAAP,MAAqC,6CAArC,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC7B;AACA;AACA;AACA;AAEAO,EAAAA,iBAAiB,GAAG;AAChB;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA,UAAM;AAAEJ,MAAAA;AAAF,QAAiC,KAAKK,KAA5C;AACAL,IAAAA,0BAA0B;AAE7B;;AAEDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFxB;AAGI,MAAA,SAAS,EAAEP,4BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,SAAS,EAAEN,wBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAaH;;AAvD4B,C,CA0DjC;AACA;AACA;AACA;;;AAEA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACpC;AAEAV,EAAAA,0BAA0B,EAAE,MAAMU,QAAQ,CAACV,0BAA0B,EAA3B;AAHN,CAAL,CAAnC;;AAQA,eAAeD,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCN,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import { createStructuredSelector } from 'reselect'\n\n//components\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n// import WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n\n//pages\n// import CollectionPage from '../collection/collection.component';\n\n//firestore\n// import { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\n\n//actions\n// import { updateCollections } from '../../redux/shop/shop.actions';\n\n//thunk actions\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n// import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\n//container\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'\nimport CollectionsPageContainer from '../../pages/collection/collection.container'\n\n// const ShopPage = ({ match }) => (\n\n//     <div className=\"shop-page\">\n//         <Route exact path={`${match.path}`} component={CollectionsOverview} />\n//         <Route path={`${match.path}/:collectionId`}  component={CollectionPage} />\n//     </div>\n\n// )\n\n\n//spinner - high order component\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n    // state = {\n    //     loading: true\n    // }\n    // unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        // const { updateCollections } = this.props;\n        // const collectionRef = firestore.collection('collection');\n\n\n\n        //using snapshot\n        // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n        //     const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n        //     console.log(collectionsMap);\n        //     updateCollections(collectionsMap)\n        //     this.setState({ loading: false })\n        // });\n\n        // using .get promise --- moved to reducer via redux-thunk\n        // collectionRef.get().then(snapshot => {\n        //     const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n        //     console.log(collectionsMap);\n        //     updateCollections(collectionsMap)\n        //     this.setState({ loading: false })\n        // })\n\n        // //too nested\n        //         fetch('https://firestore.googleapis.com/v1/projects/crwn-db-c482a/databases/(default)/documents/collection')\n        //         .then(response => response.json())\n        //         .then(response => console.log(response))\n        //         }\n\n\n        const { fetchCollectionsStartAsync } = this.props;\n        fetchCollectionsStartAsync();\n\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n            <div className=\"shop-page\" >\n                <Route\n                    exact\n                    path={`${match.path}`}\n                    component={CollectionsOverviewContainer} />\n\n                <Route\n                    path={`${match.path}/:collectionId`}\n                    component={CollectionsPageContainer} />\n\n            </div >\n        );\n    }\n}\n\n// const mapStateToProps = createStructuredSelector({\n//     isCollectionFetching: selectIsCollectionFetching,\n//     isCollectionsLoaded: selectIsCollectionsLoaded\n// })\n\nconst mapDispatchToProps = dispatch => ({\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n\n\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}