{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react'; //router\n\nimport { withRouter } from 'react-router-dom'; //connect to store\n\nimport { connect } from 'react-redux'; //actions\n\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'; //components\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../../components/cart-item/cart-item.component'; //selectors\n\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors'; //styles\n\nimport './cart-dropdown.styles.scss'; //actions\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}, cartItems.length ? //0 is equal to false\ncartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 38\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n}, \"GO TO CHECKOUT\")); //connect to store -- redux - store.js and get the state and put to props in CartDropDown \n//use selector. cartItem object will now reference selector as value\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); //mapDispatch to props -- already given by connect if there's only stateToProps argument\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","withRouter","connect","toggleCartHidden","CustomButton","CartItem","createStructuredSelector","selectCartItems","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,+BAAjC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,gDAArB,C,CAEA;;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,iCAAhC,C,CAEA;;AACA,OAAO,6BAAP,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBAEjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGQF,SAAS,CAACG,MAAV,GAAmB;AACfH,SAAS,CAACI,GAAV,CACIC,QAAQ,iBAAK,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADjB,CADJ,gBAKI;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARZ,CADJ,eAaI,oBAAC,YAAD;AAAc,EAAA,OAAO,EACjB,MAAM;AACFJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AACH,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CAFJ,C,CA2BA;AACA;;;AACA,MAAMc,eAAe,GAAGX,wBAAwB,CAAC;AAC7CG,EAAAA,SAAS,EAAEF;AADkC,CAAD,CAAhD,C,CAMA;;AACA,eAAeN,UAAU,CAACC,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\n\n//router\nimport { withRouter } from 'react-router-dom';\n\n//connect to store\nimport { connect } from 'react-redux'\n\n//actions\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'\n\n//components\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../../components/cart-item/cart-item.component'\n\n//selectors\nimport { createStructuredSelector } from 'reselect'\nimport { selectCartItems } from '../../redux/cart/cart.selectors'\n\n//styles\nimport './cart-dropdown.styles.scss'\n\n//actions\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n\n    <div className=\"cart-dropdown\">\n        <div className=\"cart-items\" >\n\n            {\n                cartItems.length ? //0 is equal to false\n                    cartItems.map(\n                        cartItem => (<CartItem key={cartItem.id} item={cartItem}></CartItem>)\n                    )\n                    :\n                    <span className=\"empty-message\">Your cart is empty</span>\n            }\n\n        </div>\n        <CustomButton onClick={\n            () => {\n                history.push(\"/checkout\");\n                dispatch(toggleCartHidden());\n            }\n        }>\n            GO TO CHECKOUT\n            </CustomButton>\n    </div >\n\n);\n\n//connect to store -- redux - store.js and get the state and put to props in CartDropDown \n//use selector. cartItem object will now reference selector as value\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n})\n\n\n\n//mapDispatch to props -- already given by connect if there's only stateToProps argument\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}