{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/App.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; //redux\n\nimport { connect } from 'react-redux'; //redux actions\n\nimport { setCurrentUserAction } from './redux/user/user.actions'; //selectors\n\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selectors'; //components\n\nimport Header from './components/header/header.component'; //styles\n\nimport './App.css'; //pages\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.components';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component'; //utilities\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'; ///Extend Component from React\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  //componentDidMount is a lifecylce of React -- anything that happens within this will run after the render as mounted - appeared \n  componentDidMount() {\n    //DECONSTRUCT setCurrentUser\n    const {\n      setCurrentUserProp\n    } = this.props; ///////////////////SIGN IN BY GOOGLE using .onAuthStateChanged()//////////////////////////////////\n    //calling auth from firebase.util -- within has the method .onAuthStateChanged -- setting the state for the user that logged in via Google\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //if userAuth is not null -- if signing in -- using onAuthStateChanged when logging in via Google, userAuth object will trigger\n      if (userAuth) {\n        //we get the reference from the userAuth object being passed in via createUserProfileDocument - a method create in firebase.util\n        const userRef = await createUserProfileDocument(userAuth); // check snapshop if user exists -- userRef is returned from createUserProfile()\n        //Use snapshots to get the data using onSnapShot() -- since we should be doing all back end stuff in the backend via firebase.util\n        //create a snapShot object\n\n        userRef.onSnapshot(snapShot => {\n          //use .data() to get the properties we got from createUserProfile()\n          //the id is in the snapShot but not in .data()\n          // console.log(snapShot.data());\n          /////////////////////////REDUX//////////////////////////\n          //set the current user in the state\n          setCurrentUserProp({\n            id: snapShot.id,\n            //... (ellipses) adds all the object properties we got\n            ...snapShot.data()\n          });\n        });\n      } else {\n        //userAuth is null \n        // this.setState({\n        //   currentUser: userAuth\n        // })\n        // REDUX \n        setCurrentUserProp(userAuth);\n      } // //import the constant from firebase util, and pass the user\n      // createUserProfileDocument(user);\n      // console.log(user);\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //mapping state to props\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); //dispatching props to action\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUserProp: user => dispatch(setCurrentUserAction(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/src/App.js"],"names":["React","Component","Switch","Route","Redirect","connect","setCurrentUserAction","createStructuredSelector","selectCurrentUser","Header","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","auth","createUserProfileDocument","App","unsubscribeFromAuth","componentDidMount","setCurrentUserProp","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\n//redux\nimport { connect } from 'react-redux';\n\n//redux actions\nimport { setCurrentUserAction } from './redux/user/user.actions';\n\n//selectors\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selectors';\n\n//components\nimport Header from './components/header/header.component';\n\n//styles\nimport './App.css';\n\n//pages\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.components';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\n//utilities\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\n///Extend Component from React\nclass App extends Component {\n\n  //the default should be unsubscribe from Auth == null\n  unsubscribeFromAuth = null;\n\n  //componentDidMount is a lifecylce of React -- anything that happens within this will run after the render as mounted - appeared \n  componentDidMount() {\n\n    //DECONSTRUCT setCurrentUser\n    const { setCurrentUserProp } = this.props;\n\n    ///////////////////SIGN IN BY GOOGLE using .onAuthStateChanged()//////////////////////////////////\n    //calling auth from firebase.util -- within has the method .onAuthStateChanged -- setting the state for the user that logged in via Google\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n\n      //if userAuth is not null -- if signing in -- using onAuthStateChanged when logging in via Google, userAuth object will trigger\n      if (userAuth) {\n\n        //we get the reference from the userAuth object being passed in via createUserProfileDocument - a method create in firebase.util\n        const userRef = await createUserProfileDocument(userAuth);\n\n        // check snapshop if user exists -- userRef is returned from createUserProfile()\n        //Use snapshots to get the data using onSnapShot() -- since we should be doing all back end stuff in the backend via firebase.util\n        //create a snapShot object\n        userRef.onSnapshot(snapShot => {\n          //use .data() to get the properties we got from createUserProfile()\n\n          //the id is in the snapShot but not in .data()\n          // console.log(snapShot.data());\n\n          /////////////////////////REDUX//////////////////////////\n          //set the current user in the state\n\n          setCurrentUserProp({\n            id: snapShot.id,\n            //... (ellipses) adds all the object properties we got\n            ...snapShot.data()\n          })\n\n        }) \n      } else {\n        //userAuth is null \n        // this.setState({\n        //   currentUser: userAuth\n        // })\n        // REDUX \n        setCurrentUserProp(userAuth);\n      }\n\n\n      // //import the constant from firebase util, and pass the user\n      // createUserProfileDocument(user);\n      // console.log(user);\n\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n\n          <Route exact path=\"/signin\" render={\n            () => this.props.currentUser ?\n              (\n                <Redirect to=\"/\" />\n              )\n              :\n              (\n\n                <SignInAndSignUpPage />\n              )\n          } />\n        </Switch>\n      </div>\n\n    );\n  }\n}\n\n//mapping state to props\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\n\n//dispatching props to action\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUserProp: user => dispatch(setCurrentUserAction(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}