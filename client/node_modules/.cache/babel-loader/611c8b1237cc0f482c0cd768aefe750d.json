{"ast":null,"code":"import { createSelector } from 'reselect'; //input selector select***\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], //first argument, the colelction the cart from store\ncart => cart.cartItems // a function returning value from selector -- each input selections of the selectCart array\n);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/kevinsouribio/Desktop/StartOfSomethingNew/crwn-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAC3B;AACdE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAElB;AAFkB,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACC,mBAAD,EAAsBC,QAAtB,KACID,mBAAmB,GAAGC,QAAQ,CAACC,QAF1B,EAGT,CAHS,CAFiC,CAA3C;AASP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACC,mBAAD,EAAsBC,QAAtB,KACID,mBAAmB,GAAIC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAF/C,EAGT,CAHS,CAF4B,CAAtC","sourcesContent":["import { createSelector } from 'reselect'\n\n//input selector select***\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart], //first argument, the colelction the cart from store\n    cart => cart.cartItems // a function returning value from selector -- each input selections of the selectCart array\n);\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce(\n        (accumulatedQuantity, cartItem) =>\n            accumulatedQuantity + cartItem.quantity,\n        0\n    )\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce(\n        (accumulatedQuantity, cartItem) =>\n            accumulatedQuantity + (cartItem.quantity * cartItem.price),\n        0\n    )\n)"]},"metadata":{},"sourceType":"module"}